# coding: utf-8

"""
    IamBackoffice Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from iambackoffice.models.iambackoffice_user import IambackofficeUser

class TestIambackofficeUser(unittest.TestCase):
    """IambackofficeUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IambackofficeUser:
        """Test IambackofficeUser
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IambackofficeUser`
        """
        model = IambackofficeUser()
        if include_optional:
            return IambackofficeUser(
                active = True,
                birth_date = '',
                data = {
                    'key' : ''
                    },
                email = '',
                first_name = '',
                full_name = '',
                id = '',
                image_url = '',
                insert_instant = '',
                last_login_instant = '',
                last_name = '',
                last_update_instant = '',
                middle_name = '',
                mobile_phone = '',
                password = '',
                password_change_required = True,
                password_last_update_instant = '',
                preferred_languages = [
                    ''
                    ],
                registrations = [
                    iambackoffice.models.iambackoffice_user_registration.iambackofficeUserRegistration(
                        tenant_id = '', 
                        data = {
                            'key' : ''
                            }, 
                        preferred_languages = [
                            ''
                            ], 
                        roles = [
                            ''
                            ], 
                        timezone = '', )
                    ],
                timezone = '',
                two_factor = iambackoffice.models.iambackoffice_user_two_factor_configuration.iambackofficeUserTwoFactorConfiguration(
                    methods = [
                        iambackoffice.models.iambackoffice_two_factor_method.iambackofficeTwoFactorMethod(
                            authenticator = iambackoffice.models.iambackoffice_authenticator_configuration.iambackofficeAuthenticatorConfiguration(
                                algorithm = '', 
                                code_length = 56, 
                                time_step = 56, ), 
                            email = '', 
                            id = '', 
                            method = '', 
                            mobile_phone = '', 
                            secret = '', )
                        ], 
                    recovery_codes = [
                        ''
                        ], ),
                username = '',
                verified = True
            )
        else:
            return IambackofficeUser(
        )
        """

    def testIambackofficeUser(self):
        """Test IambackofficeUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
